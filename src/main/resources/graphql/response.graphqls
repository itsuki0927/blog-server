interface SearchResponse {
    total:Int
}

type SearchBlogResponse implements SearchResponse {
    total:Int
    data: [Blog]
}

type SearchTagResponse implements SearchResponse{
    total:Int
    data: [Tag]
}

type SearchCommentResponse implements SearchResponse{
    total:Int
    data:[Comment]
}

enum OperateState {
    OK,
    NOT_OK
}
type LoginResponse {
    state: OperateState
    token: String
    expiration: Int
}

# TODO: 和Blog一样, 只是加了一个prevBlog、nextBlog
type BlogDetailResponse implements IdentifiableEntity{
    id:ID!
    createAt: LocalDateTime
    updateAt: LocalDateTime
    title:String
    path:String
    description:String
    keywords: String
    content:String
    cover:String
    commenting:Int
    author:String
    liking:Int
    reading:Int
    publish: Int
    banner:Int
    cardStyle:String
    tags: [Tag]
    prevBlog: Blog
    nextBlog: Blog
}

type SiteSummaryResponse{
    blog:Int
    tag:Int
    comment:Int
    guestbook: Int
    reading: Int
    startTime: LocalDateTime
}

type BlogSummary {
    publish:Int
    value:Int
    title:String
    state:String
}

type BlogSummaryResponse{
    total: BlogSummary
    draft: BlogSummary
    recycle:BlogSummary
    published:BlogSummary
}