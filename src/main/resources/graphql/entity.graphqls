interface IdentifiableEntity {
    id: ID!
    createAt: LocalDateTime!
    updateAt: LocalDateTime!
}

enum Role {
    ADMIN
}

type Admin {
    nickname: String
    avatar: String
    role: Role
    username: String
    description: String
}

type Comment implements IdentifiableEntity {
    id: ID!
    uid: String # 兼容之前的评论
    createAt: LocalDateTime!
    updateAt: LocalDateTime!
    nickname: String!
    email: String!
    avatar: String!
    provider: String
    content: String!
    emoji: String
    ip: String
    agent: String
    city: String
    province: String
    state: Int!
    blogTitle: String
    blogDescription: String
    blogId: ID!
    parentNickName: String
    parentId: ID
}

#enum BlogCardStyle  {
#    Image,
#    Text,
#    Mixin,
#}

type Blog implements IdentifiableEntity {
    id: ID!
    createAt: LocalDateTime!
    updateAt: LocalDateTime!
    title: String!
    path: String!
    description: String!
    keywords: String!
    content: String!
    cover: String!
    commenting: Int!
    author: String!
    liking: Int!
    reading: Int!
    publish: Int!
    cardStyle: Int!
    tags: [Tag!]!
}

type Tag implements IdentifiableEntity {
    id: ID!
    createAt: LocalDateTime!
    updateAt: LocalDateTime!
    name: String!
    path: String!
    description: String!
    expand: String
    sort: Int!
    count: Int!
}

type BlackList implements IdentifiableEntity {
    id: ID!
    createAt: LocalDateTime!
    updateAt: LocalDateTime!
    ip: String
    email: String
    keyword: String
}