type Mutation {
    createArticle(input: CreateArticleInput!): Article
    updateArticle(id: ID!, input: CreateArticleInput!): Article
    deleteArticle(id: ID!): Int
    # 发布状态: 0 -> 草稿, 1 -> 已发布, 2 -> 回收站
    updateArticleState(ids: [ID]!, state: Int!): Int
    updateArticleBanner(ids: [ID]!, banner: Int!):Int
    incrementArticleReading(id:ID!): Int
    incrementArticleLiking(id:ID!): Int

    createCategory(input: CategoryActionInput!): Category
    updateCategory(id:ID!, input: CategoryActionInput!): Category
    deleteCategory(id: ID!):Int

    createTag(input: TagActionInput!): Tag
    updateTag(id:ID!, input: TagActionInput!): Tag
    deleteTag(id:ID!): Int

    createComment(input: CreateCommentInput!): Comment
    deleteComment(id:ID!): Int
    updateCommentState(id:ID!, state:Int!):Int
    updateComment(id:ID!, input: UpdateCommentInput!): Comment

    login(input: LoginRequest!):LoginResponse
}

enum OperateState {
    OK,
    NOT_OK
}
type LoginResponse {
    state: OperateState
    token: String
    expiration: Int
}

input LoginRequest {
    username: String!
    password: String!
}

input CreateArticleInput {
    title:String!
    path:String!
    description:String!
    keywords: String!
    content:String!
    cover:String!
    categoryId:Int!
    password:String
    publish: Int!
    origin:Int!
    open:Int!
    banner:Int!
    tagIds: [Int]
}

input CreateCommentInput {
    nickname:String!
    email:String!
    website:String!
    agent:String!
    content:String!
    expand:String
    parentId:ID
    articleId:ID!
}

input UpdateCommentInput {
    nickname:String
    email:String
    website:String
    content:String
    liking:Int
    state:Int
    fix:Int
    expand:String
}

input CategoryActionInput {
    name: String
    path: String
    description: String
    expand: String
    sort: Int
}

input TagActionInput {
    name: String
    path: String
    description: String
    expand: String
    sort: Int
}

fragment CategoryFragment on Category{
    name
    id
    path
    description
    count
    sort
    expand
}